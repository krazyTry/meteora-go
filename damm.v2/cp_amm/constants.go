// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.
// This file contains constants.

package cp_amm

import "math/big"

var (
	AccountKeyClaimFeeOperator = "ClaimFeeOperator"
	AccountKeyConfig           = "Config"
	AccountKeyPool             = "Pool"
	AccountKeyPosition         = "Position"
	AccountKeyTokenBadge       = "TokenBadge"
	AccountKeyVesting          = "Vesting"
)

var (
	SCALE_OFFSET uint = 64

	ONE = big.NewInt(1 << SCALE_OFFSET)

	LIQUIDITY_SCALE uint = 128

	DYNAMIC_FEE_FILTER_PERIOD_DEFAULT    uint16 = 10
	DYNAMIC_FEE_DECAY_PERIOD_DEFAULT     uint16 = 120
	DYNAMIC_FEE_REDUCTION_FACTOR_DEFAULT uint16 = 5000 // 50%

	BASIS_POINT_MAX = big.NewInt(10_000)

	MAX_FEE_NUMERATOR = big.NewInt(500_000_000)

	FEE_DENOMINATOR = big.NewInt(1_000_000_000)

	MAX_FEE_BASIS_POINTS uint16 = 10000

	ONE_IN_BASIS_POINTS = big.NewInt(int64(MAX_FEE_BASIS_POINTS))

	U64_MAX = uint64(18446744073709551615)

	BIN_STEP_BPS_DEFAULT = big.NewInt(1)
	// bin_step << 64 / BASIS_POINT_MAX
	BIN_STEP_BPS_U128_DEFAULT = big.NewInt(1844674407370955)

	MIN_SQRT_PRICE    = new(big.Int).SetUint64(4295048016)
	MAX_SQRT_PRICE, _ = new(big.Int).SetString("79226673521066979257578248091", 10)

	MAX_PRICE_CHANGE_BPS_DEFAULT = 1500 // 15%
)

type TokenType uint8

const (
	TokenTypeSPL TokenType = iota
	TokenTypeToken2022
)

type ActivationType uint8

const (
	ActivationTypeSlot ActivationType = iota
	ActivationTypeTimestamp
)

type FeeSchedulerMode uint8

const (
	FeeSchedulerModeLinear FeeSchedulerMode = iota
	FeeSchedulerModeExponential
)

type CollectFeeMode uint8

const (
	CollectFeeModeBothToken CollectFeeMode = iota // 0
	CollectFeeModeOnlyA                           // 1
	CollectFeeModeOnlyB                           // 2
)
